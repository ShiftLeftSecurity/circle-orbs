version: 2.1
description: |
  Analyze your application using ShiftLeft (https://www.shiftleft.io/).

  ShiftLeft is a continuous application security platform, purpose-built for
  the modern software development life cycle. It combines next-generation static
  code analysis (to quickly and accurately identify vulnerabilities) with
  application instrumentation (to protect the application) in an automated
  workflow. This combination of runtime-informed code analysis and code-informed
  runtime protection delivers the most accurate, automated, and comprehensive
  application security solution on the market today.

  You use the ShiftLeft Orb to integrate your CircleCI project with ShiftLeft. To do so:
  1. Obtain a ShiftLeft account (https://www.shiftleft.io/register?campaign=circleci)
  2. Identify your ShiftLeft Org ID and Access Token environment variables from the ShiftLeft Dashboard User Profile page 
  (https://www.shiftleft.io/user/profile).

  Code for the ShiftLeft Orb is available at https://github.com/ShiftLeftSecurity/circle-orbs.

commands:
  install:
    description: Install the ShiftLeft CLI
    steps:
      - run:
          name: ShiftLeft CLI installation
          command: |
            test -f /usr/local/bin/sl ||
            curl https://cdn.shiftleft.io/download/sl >/tmp/sl &&
            chmod a+rx /tmp/sl &&
            sudo mv /tmp/sl /usr/local/bin/sl
  auth-check:
    description: Verify that ShiftLeft auth credentials are set correctly.
    parameters:
      org-id:
        type: env_var_name
        description: |
          The env var name to use for the org ID. Do not change this.
          The org ID needs to be provided as an environment variable before using this orb.
          The org ID can be obtained from https://www.shiftleft.io/user/profile.
        default: "SHIFTLEFT_ORG_ID"
      access-token:
        type: env_var_name
        description: |
          The env var name to use for the access token. Do not change this.
          The access token needs to be provided as an environment variable before using this orb.
          The access token can be obtained from https://www.shiftleft.io/user/profile.
        default: "SHIFTLEFT_ACCESS_TOKEN"
    steps:
      - run:
          name: ShiftLeft authentication check
          command: |
            if [ -z "$SHIFTLEFT_ORG_ID" ]; then
              echo "SHIFTLEFT_ORG_ID variable has not been set."
              echo "See https://docs.shiftleft.io/shiftleft/using-shiftleft-inspect-and-shiftleft-protect/using-the-shiftleft-cli/authenticating"
              exit 1
            fi
            if [ -z "$SHIFTLEFT_ACCESS_TOKEN" ]; then
              echo "SHIFTLEFT_ACCESS_TOKEN variable has not been set."
              echo "See https://docs.shiftleft.io/shiftleft/using-shiftleft-inspect-and-shiftleft-protect/using-the-shiftleft-cli/authenticating"
              exit 1
            fi
  analyze:
    description: Analyze your application using ShiftLeft
    parameters:
      target:
        type: string
        description: The target file to analyze
      app:
        type: string
        description: The name of the application the analysis is for
      wait:
        type: boolean
        default: false
        description: Wait for analysis to finish
      language:
        type: enum
        description: |
          The language to perform analysis for. Must be one of "java", "csharp",
          "js", "python", "go"
        enum: ["java", "csharp", "js", "python", "go"]
      cpg:
        type: boolean
        description: CPG mode
        default: false
      no-cpg:
        type: boolean
        description: CPG mode disabled
        default: false
      force:
        type: boolean
        description: Force re-analysis and uploading
        default: false
      dotnet-platform:
        type: enum
        description: Target .NET platform. Must be one of "core", "framework"
        enum: ["", "core", "framework"]
        default: ""
      policy:
        type: string
        description: |
          The ShiftLeft Policy ID used in the analysis. If this is not set,
          the ShiftLeft baseline policy is used.
        default: ""
      extra-args:
        type: string
        description: Additional flags/arguments to be passed to the sl analyze command.
        default: ""
      org-id:
        type: env_var_name
        description: |
          The env var name to use for the org ID. Do not change this.
          The org ID needs to be provided as an environment variable before using this orb.
          The org ID can be obtained from https://www.shiftleft.io/user/profile.
        default: "SHIFTLEFT_ORG_ID"
      access-token:
        type: env_var_name
        description: |
          The env var name to use for the access token. Do not change this.
          The access token needs to be provided as an environment variable before using this orb.
          The access token can be obtained from https://www.shiftleft.io/user/profile.
        default: "SHIFTLEFT_ACCESS_TOKEN"
    steps:
      - auth-check
      - install
      - run:
          name: ShiftLeft Analysis
          command: |
            dotnet_platform_param=""
            if [ -n "<<parameters.dotnet-platform>>" ]; then
              dotnet_platform_param="--dotnet-<<parameters.dotnet-platform>>"
            fi
            sl analyze \
              --tag branch="$CIRCLE_BRANCH" \
              $dotnet_platform_param \
              <<parameters.extra-args>> \
              "--<<parameters.language>>" \
              "<<parameters.target>>"
          environment:
            SHIFTLEFT_FORCE: <<parameters.force>>
            SHIFTLEFT_APP: <<parameters.app>>
            SHIFTLEFT_WAIT: <<parameters.wait>>
            SHIFTLEFT_CPG: <<parameters.cpg>>
            SHIFTLEFT_NO_CPG: <<parameters.no-cpg>>
            SHIFTLEFT_POLICY: <<parameters.policy>>

jobs:
  analyze:
    description: Analyze applications using ShiftLeft
    executor: default
    parameters:
      target:
        type: string
        description: The target file to analyze
      app:
        type: string
        description: The name of the application the analysis is for
      wait:
        type: boolean
        default: false
        description: Wait for analysis to finish
      language:
        type: enum
        description: |
          The language to perform analysis for. Must be one of "java", "csharp",
          "js", "python", "go"
        enum: ["java", "csharp", "js", "python", "go"]
      cpg:
        type: boolean
        description: CPG mode
        default: false
      no-cpg:
        type: boolean
        description: CPG mode disabled
        default: false
      force:
        type: boolean
        description: Force re-analysis and uploading
        default: false
      dotnet-platform:
        type: enum
        description: Target .NET platform. Must be one of "core", "framework"
        enum: ["", "core", "framework"]
        default: ""
      policy:
        type: string
        description: |
          The ShiftLeft Policy ID used in the analysis. If this is not set,
          the ShiftLeft baseline policy is used.
        default: ""
      extra-args:
        type: string
        description: Additional flags/arguments to be passed to the sl analyze command.
        default: ""
      org-id:
        type: env_var_name
        description: |
          The env var name to use for the org ID. Do not change this.
          The org ID needs to be provided as an environment variable before using this orb.
          The org ID can be obtained from https://www.shiftleft.io/user/profile.
        default: "SHIFTLEFT_ORG_ID"
      access-token:
        type: env_var_name
        description: |
          The env var name to use for the access token. Do not change this.
          The access token needs to be provided as an environment variable before using this orb.
          The access token can be obtained from https://www.shiftleft.io/user/profile.
        default: "SHIFTLEFT_ACCESS_TOKEN"
      pre-analyze:
        type: steps
        description: |
          Run these steps prior to analyzing the application, but after the
          checkout step.
    steps:
      - checkout
      - steps: <<parameters.pre-analyze>>
      - analyze:
          target: <<parameters.target>>
          app: <<parameters.app>>
          wait: <<parameters.wait>>
          language: <<parameters.language>>
          cpg: <<parameters.cpg>>
          no-cpg: <<parameters.no-cpg>>
          force: <<parameters.force>>
          dotnet-platform: <<parameters.dotnet-platform>>
          policy: <<parameters.policy>>
          extra-args: <<parameters.extra-args>>
          org-id: <<parameters.org-id>>
          access-token: <<parameters.access-token>>

executors:
  default:
    description: A simple default executor.
    machine: true

examples:
  analysis-via-command:
    description: Analyzing an application with ShiftLeft using commands
    usage:
      version: 2.1
      orbs:
        shiftleft: shiftleft/shiftleft@1.0
      jobs:
        build:
          machine: true
          steps:
            - shiftleft/analyze:
                app: my app
                target: build/my-jar-0.0.1.jar
                language: java
      workflows:
        version: 2.1
        workflow:
          jobs:
            - build
  analysis-via-job:
    description: Analyzing an application with ShiftLeft using jobs
    usage:
      version: 2.1
      orbs:
        shiftleft: shiftleft/shiftleft@1.0
      workflows:
        version: 2.1
        workflow:
          jobs:
            - shiftleft/analyze:
                app: my app
                target: build/my-jar-0.0.1.jar
                language: java
